# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Test

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install coverage
    - name: Test application
      run: |
        coverage run --omit tests/*,*__init__.py -m unittest discover -s ./tests -v && coverage lcov -o lcov.info && coverage report

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Update version
      if: matrix.python-version == '3.12' 
      run: |
        git fetch --tags
        tag_name=$(git describe --tags $(git rev-list --tags --max-count=1))
        IFS='.' read -r -a version <<< "$tag_name"
        patch=$((version[2]+1))
        new_tag="${version[0]}.${version[1]}.$patch"
        echo "tag_name=$new_tag" >> "$GITHUB_OUTPUT"

        git tag $new_tag
        git push origin $new_tag
        echo "New version: $new_tag"